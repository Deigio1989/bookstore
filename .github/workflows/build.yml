name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.8, 3.9]

    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: bookstore
          POSTGRES_USER: yourusername
          POSTGRES_PASSWORD: yourpassword
        options: >-
          --health-cmd "pg_isready -U yourusername -d bookstore"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install poetry
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install --upgrade poetry

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Verify installed packages
        run: poetry show

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U yourusername -d bookstore; do
            echo "Waiting for database to be ready..."
            sleep 5
          done

      - name: Run script to delete test database if exists
        env:
          DATABASE_URL: postgres://yourusername:yourpassword@localhost:5432/bookstore
        run: poetry run python delete_test_db.py

      - name: Apply migrations
        run: poetry run python manage.py migrate

      - name: Run tests
        env:
          DJANGO_ALLOWED_HOSTS: "localhost 127.0.0.1 [::1]" # Adiciona a vari√°vel de ambiente aqui
        run: poetry run python manage.py test
